<?php
/*
 * This file is part of the nia framework architecture.
 *
 * (c) 2016 - Patrick Ullmann <patrick.ullmann@nat-software.de>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
declare(strict_types = 1);
namespace Test\Nia\Translating\Selector;

use PHPUnit_Framework_TestCase;
use Nia\Translating\Selector\PluralRuleSelector;
use Nia\Collection\Map\StringMap\Map;

/**
 * Unit test for \Nia\Translating\Selector\PluralRuleSelector.
 */
class PluralRuleSelectorTest extends PHPUnit_Framework_TestCase
{

    /**
     * @covers \Nia\Translating\Selector\PluralRuleSelector::choose
     *
     * @dataProvider chooseProvider
     */
    public function testChoose($locale, $value, $expected)
    {
        $selector = new PluralRuleSelector();

        $this->assertSame($expected, $selector->choose($locale, new Map([
            'a',
            'b',
            'c',
            'd',
            'e',
            'f'
        ]), (int) $value));
    }

    /**
     * @covers \Nia\Translating\Selector\PluralRuleSelector::choose
     */
    public function testChooseException()
    {
        $this->setExpectedException(\InvalidArgumentException::class, 'No plural rule defined for "xxx_XXX".');

        $selector = new PluralRuleSelector();

        $selector->choose('xxx_XXX', new Map(), 1234);
    }

    public function chooseProvider()
    {
        $content = <<<EOL
af_ZA;0;b
af_ZA;1;a
af_ZA;2;b
af_ZA;3;b
am_ET;0;a
am_ET;1;a
am_ET;2;b
am_ET;3;b
ar_AE;0;a
ar_AE;1;b
ar_AE;2;c
ar_AE;3;d
ar_BH;0;a
ar_BH;1;b
ar_BH;2;c
ar_BH;3;d
ar_DZ;0;a
ar_DZ;1;b
ar_DZ;2;c
ar_DZ;3;d
ar_EG;0;a
ar_EG;1;b
ar_EG;2;c
ar_EG;3;d
ar_IQ;0;a
ar_IQ;1;b
ar_IQ;2;c
ar_IQ;3;d
ar_JO;0;a
ar_JO;1;b
ar_JO;2;c
ar_JO;3;d
ar_KW;0;a
ar_KW;1;b
ar_KW;2;c
ar_KW;3;d
ar_LB;0;a
ar_LB;1;b
ar_LB;2;c
ar_LB;3;d
ar_LY;0;a
ar_LY;1;b
ar_LY;2;c
ar_LY;3;d
ar_MA;0;a
ar_MA;1;b
ar_MA;2;c
ar_MA;3;d
ar_OM;0;a
ar_OM;1;b
ar_OM;2;c
ar_OM;3;d
ar_QA;0;a
ar_QA;1;b
ar_QA;2;c
ar_QA;3;d
ar_SA;0;a
ar_SA;1;b
ar_SA;2;c
ar_SA;3;d
ar_SY;0;a
ar_SY;1;b
ar_SY;2;c
ar_SY;3;d
ar_TN;0;a
ar_TN;1;b
ar_TN;2;c
ar_TN;3;d
ar_YE;0;a
ar_YE;1;b
ar_YE;2;c
ar_YE;3;d
az_Cyrl_AZ;0;a
az_Cyrl_AZ;1;a
az_Cyrl_AZ;2;a
az_Cyrl_AZ;3;a
az_Latn_AZ;0;a
az_Latn_AZ;1;a
az_Latn_AZ;2;a
az_Latn_AZ;3;a
be_BY;0;c
be_BY;1;a
be_BY;2;b
be_BY;3;b
bg_BG;0;b
bg_BG;1;a
bg_BG;2;b
bg_BG;3;b
bn_BD;0;b
bn_BD;1;a
bn_BD;2;b
bn_BD;3;b
bn_IN;0;b
bn_IN;1;a
bn_IN;2;b
bn_IN;3;b
bo_CN;0;a
bo_CN;1;a
bo_CN;2;a
bo_CN;3;a
bs_Cyrl_BA;0;c
bs_Cyrl_BA;1;a
bs_Cyrl_BA;2;b
bs_Cyrl_BA;3;b
bs_Latn_BA;0;c
bs_Latn_BA;1;a
bs_Latn_BA;2;b
bs_Latn_BA;3;b
ca_ES;0;b
ca_ES;1;a
ca_ES;2;b
ca_ES;3;b
cs_CZ;0;c
cs_CZ;1;a
cs_CZ;2;b
cs_CZ;3;b
cy_GB;0;d
cy_GB;1;a
cy_GB;2;b
cy_GB;3;d
da_DK;0;b
da_DK;1;a
da_DK;2;b
da_DK;3;b
de_AT;0;b
de_AT;1;a
de_AT;2;b
de_AT;3;b
de_CH;0;b
de_CH;1;a
de_CH;2;b
de_CH;3;b
de_DE;0;b
de_DE;1;a
de_DE;2;b
de_DE;3;b
de_LI;0;b
de_LI;1;a
de_LI;2;b
de_LI;3;b
de_LU;0;b
de_LU;1;a
de_LU;2;b
de_LU;3;b
el_GR;0;b
el_GR;1;a
el_GR;2;b
el_GR;3;b
en_029;0;b
en_029;1;a
en_029;2;b
en_029;3;b
en_AU;0;b
en_AU;1;a
en_AU;2;b
en_AU;3;b
en_BZ;0;b
en_BZ;1;a
en_BZ;2;b
en_BZ;3;b
en_CA;0;b
en_CA;1;a
en_CA;2;b
en_CA;3;b
en_GB;0;b
en_GB;1;a
en_GB;2;b
en_GB;3;b
en_IE;0;b
en_IE;1;a
en_IE;2;b
en_IE;3;b
en_IN;0;b
en_IN;1;a
en_IN;2;b
en_IN;3;b
en_JM;0;b
en_JM;1;a
en_JM;2;b
en_JM;3;b
en_MY;0;b
en_MY;1;a
en_MY;2;b
en_MY;3;b
en_NZ;0;b
en_NZ;1;a
en_NZ;2;b
en_NZ;3;b
en_PH;0;b
en_PH;1;a
en_PH;2;b
en_PH;3;b
en_SG;0;b
en_SG;1;a
en_SG;2;b
en_SG;3;b
en_TT;0;b
en_TT;1;a
en_TT;2;b
en_TT;3;b
en_US;0;b
en_US;1;a
en_US;2;b
en_US;3;b
en_ZA;0;b
en_ZA;1;a
en_ZA;2;b
en_ZA;3;b
en_ZW;0;b
en_ZW;1;a
en_ZW;2;b
en_ZW;3;b
es_AR;0;b
es_AR;1;a
es_AR;2;b
es_AR;3;b
es_BO;0;b
es_BO;1;a
es_BO;2;b
es_BO;3;b
es_CL;0;b
es_CL;1;a
es_CL;2;b
es_CL;3;b
es_CO;0;b
es_CO;1;a
es_CO;2;b
es_CO;3;b
es_CR;0;b
es_CR;1;a
es_CR;2;b
es_CR;3;b
es_DO;0;b
es_DO;1;a
es_DO;2;b
es_DO;3;b
es_EC;0;b
es_EC;1;a
es_EC;2;b
es_EC;3;b
es_ES;0;b
es_ES;1;a
es_ES;2;b
es_ES;3;b
es_GT;0;b
es_GT;1;a
es_GT;2;b
es_GT;3;b
es_HN;0;b
es_HN;1;a
es_HN;2;b
es_HN;3;b
es_MX;0;b
es_MX;1;a
es_MX;2;b
es_MX;3;b
es_NI;0;b
es_NI;1;a
es_NI;2;b
es_NI;3;b
es_PA;0;b
es_PA;1;a
es_PA;2;b
es_PA;3;b
es_PE;0;b
es_PE;1;a
es_PE;2;b
es_PE;3;b
es_PR;0;b
es_PR;1;a
es_PR;2;b
es_PR;3;b
es_PY;0;b
es_PY;1;a
es_PY;2;b
es_PY;3;b
es_SV;0;b
es_SV;1;a
es_SV;2;b
es_SV;3;b
es_US;0;b
es_US;1;a
es_US;2;b
es_US;3;b
es_UY;0;b
es_UY;1;a
es_UY;2;b
es_UY;3;b
es_VE;0;b
es_VE;1;a
es_VE;2;b
es_VE;3;b
et_EE;0;b
et_EE;1;a
et_EE;2;b
et_EE;3;b
eu_ES;0;b
eu_ES;1;a
eu_ES;2;b
eu_ES;3;b
fa_IR;0;b
fa_IR;1;a
fa_IR;2;b
fa_IR;3;b
fi_FI;0;b
fi_FI;1;a
fi_FI;2;b
fi_FI;3;b
fil_PH;0;a
fil_PH;1;a
fil_PH;2;b
fil_PH;3;b
fo_FO;0;b
fo_FO;1;a
fo_FO;2;b
fo_FO;3;b
fr_BE;0;a
fr_BE;1;a
fr_BE;2;b
fr_BE;3;b
fr_CA;0;a
fr_CA;1;a
fr_CA;2;b
fr_CA;3;b
fr_CH;0;a
fr_CH;1;a
fr_CH;2;b
fr_CH;3;b
fr_FR;0;a
fr_FR;1;a
fr_FR;2;b
fr_FR;3;b
fr_LU;0;a
fr_LU;1;a
fr_LU;2;b
fr_LU;3;b
fr_MC;0;a
fr_MC;1;a
fr_MC;2;b
fr_MC;3;b
fy_NL;0;b
fy_NL;1;a
fy_NL;2;b
fy_NL;3;b
ga_IE;0;c
ga_IE;1;a
ga_IE;2;b
ga_IE;3;c
gl_ES;0;b
gl_ES;1;a
gl_ES;2;b
gl_ES;3;b
gu_IN;0;b
gu_IN;1;a
gu_IN;2;b
gu_IN;3;b
ha_Latn_NG;0;b
ha_Latn_NG;1;a
ha_Latn_NG;2;b
ha_Latn_NG;3;b
he_IL;0;b
he_IL;1;a
he_IL;2;b
he_IL;3;b
hi_IN;0;a
hi_IN;1;a
hi_IN;2;b
hi_IN;3;b
hr_BA;0;c
hr_BA;1;a
hr_BA;2;b
hr_BA;3;b
hr_HR;0;c
hr_HR;1;a
hr_HR;2;b
hr_HR;3;b
hu_HU;0;b
hu_HU;1;a
hu_HU;2;b
hu_HU;3;b
hy_AM;0;a
hy_AM;1;a
hy_AM;2;b
hy_AM;3;b
id_ID;0;a
id_ID;1;a
id_ID;2;a
id_ID;3;a
is_IS;0;b
is_IS;1;a
is_IS;2;b
is_IS;3;b
it_CH;0;b
it_CH;1;a
it_CH;2;b
it_CH;3;b
it_IT;0;b
it_IT;1;a
it_IT;2;b
it_IT;3;b
ja_JP;0;a
ja_JP;1;a
ja_JP;2;a
ja_JP;3;a
ka_GE;0;a
ka_GE;1;a
ka_GE;2;a
ka_GE;3;a
km_KH;0;a
km_KH;1;a
km_KH;2;a
km_KH;3;a
kn_IN;0;a
kn_IN;1;a
kn_IN;2;a
kn_IN;3;a
ko_KR;0;a
ko_KR;1;a
ko_KR;2;a
ko_KR;3;a
lb_LU;0;b
lb_LU;1;a
lb_LU;2;b
lb_LU;3;b
lt_LT;0;c
lt_LT;1;a
lt_LT;2;b
lt_LT;3;b
lv_LV;0;a
lv_LV;1;b
lv_LV;2;c
lv_LV;3;c
mk_MK;0;b
mk_MK;1;a
mk_MK;2;b
mk_MK;3;b
ml_IN;0;b
ml_IN;1;a
ml_IN;2;b
ml_IN;3;b
mn_MN;0;b
mn_MN;1;a
mn_MN;2;b
mn_MN;3;b
mn_Mong_CN;0;b
mn_Mong_CN;1;a
mn_Mong_CN;2;b
mn_Mong_CN;3;b
mr_IN;0;b
mr_IN;1;a
mr_IN;2;b
mr_IN;3;b
ms_BN;0;a
ms_BN;1;a
ms_BN;2;a
ms_BN;3;a
ms_MY;0;a
ms_MY;1;a
ms_MY;2;a
ms_MY;3;a
mt_MT;0;b
mt_MT;1;a
mt_MT;2;b
mt_MT;3;b
nb_NO;0;b
nb_NO;1;a
nb_NO;2;b
nb_NO;3;b
ne_NP;0;b
ne_NP;1;a
ne_NP;2;b
ne_NP;3;b
nl_BE;0;b
nl_BE;1;a
nl_BE;2;b
nl_BE;3;b
nl_NL;0;b
nl_NL;1;a
nl_NL;2;b
nl_NL;3;b
nn_NO;0;b
nn_NO;1;a
nn_NO;2;b
nn_NO;3;b
nso_ZA;0;a
nso_ZA;1;a
nso_ZA;2;b
nso_ZA;3;b
or_IN;0;b
or_IN;1;a
or_IN;2;b
or_IN;3;b
pa_IN;0;b
pa_IN;1;a
pa_IN;2;b
pa_IN;3;b
pl_PL;0;c
pl_PL;1;a
pl_PL;2;b
pl_PL;3;b
ps_AF;0;b
ps_AF;1;a
ps_AF;2;b
ps_AF;3;b
pt_BR;0;a
pt_BR;1;a
pt_BR;2;b
pt_BR;3;b
pt_PT;0;b
pt_PT;1;a
pt_PT;2;b
pt_PT;3;b
ro_RO;0;b
ro_RO;1;a
ro_RO;2;b
ro_RO;3;b
ru_RU;0;c
ru_RU;1;a
ru_RU;2;b
ru_RU;3;b
sk_SK;0;c
sk_SK;1;a
sk_SK;2;b
sk_SK;3;b
sl_SI;0;d
sl_SI;1;a
sl_SI;2;b
sl_SI;3;c
sq_AL;0;b
sq_AL;1;a
sq_AL;2;b
sq_AL;3;b
sr_Cyrl_BA;0;c
sr_Cyrl_BA;1;a
sr_Cyrl_BA;2;b
sr_Cyrl_BA;3;b
sr_Cyrl_CS;0;c
sr_Cyrl_CS;1;a
sr_Cyrl_CS;2;b
sr_Cyrl_CS;3;b
sr_Cyrl_ME;0;c
sr_Cyrl_ME;1;a
sr_Cyrl_ME;2;b
sr_Cyrl_ME;3;b
sr_Cyrl_RS;0;c
sr_Cyrl_RS;1;a
sr_Cyrl_RS;2;b
sr_Cyrl_RS;3;b
sr_Latn_BA;0;c
sr_Latn_BA;1;a
sr_Latn_BA;2;b
sr_Latn_BA;3;b
sr_Latn_CS;0;c
sr_Latn_CS;1;a
sr_Latn_CS;2;b
sr_Latn_CS;3;b
sr_Latn_ME;0;c
sr_Latn_ME;1;a
sr_Latn_ME;2;b
sr_Latn_ME;3;b
sr_Latn_RS;0;c
sr_Latn_RS;1;a
sr_Latn_RS;2;b
sr_Latn_RS;3;b
sv_FI;0;b
sv_FI;1;a
sv_FI;2;b
sv_FI;3;b
sv_SE;0;b
sv_SE;1;a
sv_SE;2;b
sv_SE;3;b
sw_KE;0;b
sw_KE;1;a
sw_KE;2;b
sw_KE;3;b
ta_IN;0;b
ta_IN;1;a
ta_IN;2;b
ta_IN;3;b
te_IN;0;b
te_IN;1;a
te_IN;2;b
te_IN;3;b
th_TH;0;a
th_TH;1;a
th_TH;2;a
th_TH;3;a
tk_TM;0;b
tk_TM;1;a
tk_TM;2;b
tk_TM;3;b
tr_TR;0;a
tr_TR;1;a
tr_TR;2;a
tr_TR;3;a
uk_UA;0;c
uk_UA;1;a
uk_UA;2;b
uk_UA;3;b
ur_PK;0;b
ur_PK;1;a
ur_PK;2;b
ur_PK;3;b
vi_VN;0;a
vi_VN;1;a
vi_VN;2;a
vi_VN;3;a
zh_CN;0;a
zh_CN;1;a
zh_CN;2;a
zh_CN;3;a
zh_HK;0;a
zh_HK;1;a
zh_HK;2;a
zh_HK;3;a
zh_MO;0;a
zh_MO;1;a
zh_MO;2;a
zh_MO;3;a
zh_SG;0;a
zh_SG;1;a
zh_SG;2;a
zh_SG;3;a
zh_TW;0;a
zh_TW;1;a
zh_TW;2;a
zh_TW;3;a
zu_ZA;0;b
zu_ZA;1;a
zu_ZA;2;b
zu_ZA;3;b
EOL;

        // convert CSV to result set
        $result = [];
        foreach (explode("\n", $content) as $line) {
            $result[] = explode(';', $line);
        }

        return $result;
    }
}
